<h1>Version 0.7.0</h1>
Freuen Sie sich auf eine bedeutende Weiterentwicklung!
Mit dieser neuen Version präsentieren wir mehr als nur kleinere Bugfixes oder marginale Ergänzungen. 
Hinter den Kulissen steckt umfangreiche Entwicklungsarbeit, die möglicherweise auf den ersten Blick nicht sofort ersichtlich ist.

<h2>Multilanguage</h2>
Ein Meilenstein ist die Einführung der Firmware in weiteren Sprachen. Den Anfang machen Englisch und Niederländisch.
Die aktuelle Release-Version enthält die entsprechenden Firmware-Dateien in den verfügbaren Sprachoptionen.

<h2>Datamapping</h2>
Eine weitere wichtige Neuerungen betrifft den grundlegenden Umbau des Datenhandlings für die angeschlossenen BMS.<br>
<br>
<b>Was wurde geändert?</b><br>
Bisher wurde über die Konfiguration festgelegt, welches BMS an welcher seriellen Schnittstelle angeschlossen ist. Diese Portnummer wurde dann für alle weiteren Prozesse verwendet – sei es für Alarmregeln, MQTT, die REST-API oder die interne Zuordnung im Datenarray der BMS.<br>
<br>
Das führte allerdings zu einigen Einschränkungen:
<ul>
<li>Die ersten sieben Speicherplätze waren fest für Bluetooth-Geräte reserviert. Unbenutzte Plätze blieben ungenutzt, wenn keine Bluetooth-Geräte eingesetzt wurden.</li>
<li>Die Daisy-Chain-Funktion war auf Serial 2 beschränkt, da dies durch das interne Speichermanagement bedingt war.</li>
</ul>
<br>
Um diese Limitationen zu beheben, habe ich ein neues Mapping eingeführt:
<ol>
<li>Es wird weiterhin festgelegt, welches Gerät an welcher seriellen Schnittstelle angeschlossen ist. Für Daisy-Chain-Systeme wird jedoch nicht mehr die Anzahl der Geräte definiert, sondern lediglich die Zuordnung, welches Gerät beispielsweise an Serial 1 angeschlossen ist.</li>
<li>In einem zweiten Schritt wird einem der virtuellen Daten-Devices (aktuell gibt es 18 davon) eine seriellen Schnittstelle zugeordnet. Bei Daisy-Chain-Systemen muss zusätzlich die Adresse des BMS definiert werden.</li>
</ol>
Durch dieses neue Mapping können die 18 Speicherplätze nun flexibel und effizient genutzt werden.<br>
<br>
<b>Warum ist das wichtig?</b><br>
Obwohl diese Änderungen auf den ersten Blick einfach klingen, sind sie im Hintergrund äußerst komplex und beeinflussen nahezu alle Bereiche des Systems.<br>
<br>
Darüber hinaus ist dieser Umbau ein entscheidender Schritt, um unser System fit für die Zukunft zu machen.<ul>
<li>Mit der neuen Flexibilität im Datenhandling schaffen wir die Grundlage, um künftig neue Gerätetypen und Kommunikationsprotokolle einfacher integrieren zu können.</li>
<li>Die Änderungen sorgen dafür, dass wir bestehende Einschränkungen eliminieren und unser System besser skalierbar wird.</li>
<li>Nicht zuletzt ermöglichen wir damit eine effizientere Nutzung der Ressourcen, was für wachsende Anforderungen und zukünftige Weiterentwicklungen essenziell ist.</li>
</ul>

<b>Nach dem Update</b>
Durch die Änderungen ist nach dem Update folgendes zu beachten, damit das System ordnungsgemäß funktioniert:<br>
<ul>
<li><b>Data-Mapping konfigurieren</b><br>
Das Data-Device-Mapping muss zunächst korrekt festgelegt werden.</li>
<br>
<li><b>Anpassungen vornehmen</b><br>
Wechselrichter, Laderegelung, Alarmregeln, ...: Diese müssen auf die neuen Data-Devices angepasst werden.</li>
<br>
<li><b>Änderungen bei MQTT-Datenpunkten</b><br>
Die Datenpunkte wurden von /bsc/bms/serial zu /bsc/DataDevice/ID bzw. /bsc/DataDevice/Name verschoben.</li>
</ul>
Bitte berücksichtigt diese Punkte, um einen reibungslosen Betrieb sicherzustellen.

<h2>Weitere neue Features</h2>
<ul>
<li>Neues BMS: JK Inverter BMS (#118)</li>
<li>Übertragen der Batteriekapazität an den Wechselrichter (Victron) (#129)</li>
<li>Logeintrag um den Triggergrund erweitert (#133)</li>
<li>Einstellbare Relais-Logik: Permanent angezogen oder bei Trigger aktiv (#152)</li>
<li>Autobalance states werden in der restapi ausgegeben (#154)</li>
<li>Victron Smartshunt an beliebiger Serial (#161)</li>
<li>Auswählbar welches BMS in die SoC Berechnung einfliesen soll (#163)</li>
<li>Neue Option: Minmalen SoC an Wechselrichter senden (#168)</li>
<li>Hysterese bei den BMS Alarmregeln für die Spannungsüberwachung (#171)</li>
<li>Remanente vTrigger (#186)</li>
<li>Ladestrom begrenzen bei Überschreitung von Charge current per pack (#201)</li>
</ul>
<br>
<b>Fixes</b>
<ul>
<li>Seplos Warnings werden nicht mehr als Error gemeldet (#123)</li>
<li>Probleme beim Verlust der Verbindung zum MQTT Broker (#155)</li>
</ul>

<h2>Hinweis zur Nutzung von Bluetooth</h2>
Bitte beachtet, dass in dieser Version der <b>Bluetooth-Support entfernt</b> wurde. Diese Maßnahme wurde ergriffen, um sowohl die <b>Stabilität</b> als auch die <b>Performance</b> des Systems zu verbessern.<br>
Es ist für Bluetooth eine neue Lösung in Entwicklung. Diese soll mittelfristig verfügbar sein und die bisherigen Probleme beheben, um eine stabilere Nutzung zu ermöglichen.

<h1>Version 0.6.0</h1>
Neue Funktionen/Verbesserungen bei der Laderegelung:
- Absorbtion/Float Ladespannung
- Autobalancing
- CutOff (Überarbeitet)
- Funktion "Ladestrom reduzieren - SoC" erweitert um "Mindest Ladestrom in A" (#101)

Weitere neue Features/Verbesserungen:
- Neues BMS: Seplos V3 (#81)
- Neues Wechselrichter CAN-Protokoll: BYD Protocol (SolarEdge RWS)
- Passwortschutz für das WebUI (#93)
    Username: bsc
    Passwort: admin

- Problem beim Runden des SoC behoben (Fix 100% SOC bei Seplos) (#113)
- Kleinere Änderungen/Verbesserungen in den Menüs des WebUI (z.B. Invertermenü aufgeteilt zu bessern Übersichtlichkeit)
- Größere Änderungen im Unterbau des BSC


Wichtiger Hinweis!
Folgende Werte müssen nach dem Update kontrolliert und ggf. angepasst werden:
- Absorption Ladespannung
- Ladestrom reduzieren - SoC; Pro 1% um x A reduzieren
- Cut-Off Strom
